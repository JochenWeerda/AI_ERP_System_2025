# Kubernetes-Manifest f√ºr ein einfaches API-Gateway
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-simple-config
  namespace: erp-system
  labels:
    app: api-gateway-simple
    component: networking
data:
  default.conf: |
    server {
      listen 80;
      server_name localhost;

      # Frontend Route
      location / {
        proxy_pass http://frontend.erp-system.svc.cluster.local:80;
      }

      # Gesundheits-Check-Endpunkt
      location /health {
        access_log off;
        return 200 "API Gateway is healthy\n";
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-simple
  namespace: erp-system
  labels:
    app: api-gateway-simple
    component: networking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway-simple
  template:
    metadata:
      labels:
        app: api-gateway-simple
        component: networking
    spec:
      containers:
      - name: api-gateway-simple
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-config
        configMap:
          name: api-gateway-simple-config
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-simple
  namespace: erp-system
  labels:
    app: api-gateway-simple
    component: networking
spec:
  selector:
    app: api-gateway-simple
  ports:
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP 