# Kubernetes-Manifest f端r den Finance-Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: finance-service
  namespace: erp-system
  labels:
    app: finance-service
    component: finance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: finance-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: finance-service
        component: finance
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8008"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: finance-service
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        - containerPort: 8007
          name: api
        - containerPort: 8008
          name: metrics
        env:
        - name: ENABLE_METRICS
          value: "true"
        - name: METRICS_PATH
          value: "/metrics"
        - name: DB_HOST
          value: "finance-db"
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:8080"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
          successThreshold: 1
      volumes:
      - name: nginx-config
        configMap:
          name: finance-service-config
          optional: true
---
# ConfigMap f端r Finance-Service Nginx-Konfiguration
apiVersion: v1
kind: ConfigMap
metadata:
  name: finance-service-config
  namespace: erp-system
  labels:
    app: finance-service
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location /api {
            proxy_pass http://localhost:8007;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /metrics {
            proxy_pass http://localhost:8008;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>Finance-Service</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          margin: 40px;
          color: #333;
        }
        h1 {
          color: #0066cc;
        }
        .status {
          padding: 15px;
          background-color: #e6f7ff;
          border-left: 5px solid #0066cc;
          margin-bottom: 20px;
        }
      </style>
    </head>
    <body>
      <h1>Finance-Service</h1>
      <div class="status">
        <p><strong>Status:</strong> Online</p>
        <p><strong>Version:</strong> 1.0.0</p>
        <p><strong>API Endpoint:</strong> /api</p>
        <p><strong>Metrics Endpoint:</strong> /metrics</p>
      </div>
      <p>Der Finance-Service ist bereit f端r Anfragen.</p>
    </body>
    </html>
---
# Service f端r Finance-Service
apiVersion: v1
kind: Service
metadata:
  name: finance-service
  namespace: erp-system
  labels:
    app: finance-service
spec:
  selector:
    app: finance-service
  ports:
  - port: 8007
    targetPort: 8007
    name: api
  - port: 8008
    targetPort: 8008
    name: metrics
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP 